version: "3.8"

networks:
  go-i-dev:

services:
  nginx_backend_dev:
    image: nginx:stable
    container_name: ${APP_NAME}_nginx
    restart: unless-stopped
    ports:
      - "8081:80"
    links:
      - go_backend_dev
    volumes:
      - ~/Program/Dev/go/deployments/docker/nginx/site.conf:/etc/nginx/conf.d/default.conf:rw
      - ~/Program/Dev/go/deployments/docker/logs/nginx:/var/logs/nginx:rw
    depends_on:
      - go_backend_dev
    networks:
      - go-i-prod
  go_backend_dev:
    image: ${APP_IMAGE_DEV}:${APP_IMAGE_DEV_TAG}
    container_name: ${APP_NAME}_go
    restart: unless-stopped
    env_file: .env
    environment:
      DB_HOST: mongodb_backend_dev
      REDIS_HOST: redis_backend_dev
    depends_on:
      - mongodb_backend_dev
      - redis_backend_dev
    networks:
      - go-i-dev
  mongodb_backend_dev:
    image: mongo:latest
    container_name: ${APP_NAME}_mongodb
    restart: unless-stopped
    volumes:
      - ~/Program/Dev/go/deployments/docker/mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
    networks:
      - go-i-dev
  redis_backend_dev:
    image: redis:latest
    container_name: ${APP_NAME}_redis
    restart: unless-stopped
    volumes:
      - ~/Program/Dev/go/deployments/docker/redis:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}  
    command: ["redis-server", "--appendonly", "no", "--maxmemory", "500mb", "--maxmemory-policy", "allkeys-lru"]
    networks:
      - go-i-dev
  minio_backend_dev:
    image: docker.io/bitnami/minio:latest
    container_name: ${APP_NAME}_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      -  ~/Program/Dev/go/deployments/docker/minio:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS}
      MINIO_DEFAULT_BUCKETS: ${MINIO_BUCKETS} 
    networks:
      - go-i-dev  