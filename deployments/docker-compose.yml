version: "3.8"

networks:
  go-i:

services:
  go_backend:
    build: ./deployments
    container_name: ${APP_NAME}_go
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      DB_HOST: mongodb_backend_prod
      REDIS_HOST: redis_backend_prod
    depends_on:
      - mongodb_backend
      - redis_backend
    networks:
      - go-i
  mongodb_backend:
    image: mongo:latest
    container_name: ${APP_NAME}_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
    networks:
      - go-i
  redis_backend:
    image: redis:latest
    container_name: ${APP_NAME}_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}  
    command: ["redis-server", "--appendonly", "no", "--maxmemory", "500mb", "--maxmemory-policy", "allkeys-lru"]
    networks:
      - go-i
  minio_backend:
    image: docker.io/bitnami/minio:latest
    container_name: ${APP_NAME}_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - 'minio_data:/data'
    environment:
      MINIO_SERVER_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SERVER_SECRET_KEY: ${MINIO_SECRET_KEY} 
    networks:
      - go-i
  
volumes:
  minio_data:
  redis_data:
  mongo_data: